rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 40, max.words = 4000,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
cs, toSpace, "錯")
docs <- tm_map(docs, toSpace, "第")
docs <- tm_map(docs, toSpace, "原")
docs <- tm_map(docs, toSpace, "直")
docs <- tm_map(docs, toSpace, "做")
docs <- tm_map(docs, toSpace, "麼")
docs <- tm_map(docs, toSpace, "應該")
docs <- tm_map(docs, toSpace, "其實")
docs <- tm_map(docs, toSpace, "ed")
docs <- tm_map(docs, toSpace, "更")
docs <- tm_map(docs, toSpace, "再")
docs <- tm_map(docs, toSpace, "金")
docs <- tm_map(docs, toSpace, "兩")
docs <- tm_map(docs, toSpace, "年")
docs <- tm_map(docs, toSpace, "話")
docs <- tm_map(docs, toSpace, "感覺")
docs <- tm_map(docs, toSpace, "同")
docs <- tm_map(docs, toSpace, "選")
docs <- tm_map(docs, toSpace, "時")
docs <- tm_map(docs, toSpace, "蠻")
docs <- tm_map(docs, toSpace, "雙")
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 30, max.words = 4000,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 30, max.words = 4000,
rot.per=.1, colors=brewer.pal(8, "Dark2"),
ordered.colors=FALSE,use.r.layout=FALSE,
fixed.asp=TRUE)
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 2, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
filenames <- list.files(getwd(), pattern="*.txt")
library(wordcloud)
files <- lapply(filenames, readLines)
rm(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
filenames <- list.files(getwd(), pattern="*.txt")
files <- lapply(filenames, readLines)
docs <- Corpus(VectorSource(files))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
cutter=worker()
docs <- tm_map(docs, toSpace, "U")
docs <- tm_map(docs, toSpace, "推")
docs <- tm_map(docs, toSpace, "的")
docs <- tm_map(docs, toSpace, "了")
docs <- tm_map(docs, toSpace, "是")
docs <- tm_map(docs, toSpace, "我")
docs <- tm_map(docs, toSpace, "也")
docs <- tm_map(docs, toSpace, "都")
docs <- tm_map(docs, toSpace, "不")
docs <- tm_map(docs, toSpace, "在")
docs <- tm_map(docs, toSpace, "就")
docs <- tm_map(docs, toSpace, "有")
docs <- tm_map(docs, toSpace, "XD")
docs <- tm_map(docs, toSpace, "B")
docs <- tm_map(docs, toSpace, "好")
docs <- tm_map(docs, toSpace, "很")
docs <- tm_map(docs, toSpace, "啊")
docs <- tm_map(docs, toSpace, "看")
docs <- tm_map(docs, toSpace, "E")
docs <- tm_map(docs, toSpace, "C")
docs <- tm_map(docs, toSpace, "真")
docs <- tm_map(docs, toSpace, "他")
docs <- tm_map(docs, toSpace, "F")
docs <- tm_map(docs, toSpace, "會")
docs <- tm_map(docs, toSpace, "A")
docs <- tm_map(docs, toSpace, "D")
docs <- tm_map(docs, toSpace, "沒")
docs <- tm_map(docs, toSpace, "人")
docs <- tm_map(docs, toSpace, "要")
docs <- tm_map(docs, toSpace, "還")
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, toSpace, "這")
docs <- tm_map(docs, toSpace, "嗎")
docs <- tm_map(docs, toSpace, "但")
docs <- tm_map(docs, toSpace, "吧")
docs <- tm_map(docs, toSpace, "到")
docs <- tm_map(docs, toSpace, "覺得")
docs <- tm_map(docs, toSpace, "想")
docs <- tm_map(docs, toSpace, "bh")
docs <- tm_map(docs, toSpace, "跟")
docs <- tm_map(docs, toSpace, "說")
docs <- tm_map(docs, toSpace, "和")
docs <- tm_map(docs, toSpace, "個")
docs <- tm_map(docs, toSpace, "被")
docs <- tm_map(docs, toSpace, "為")
docs <- tm_map(docs, toSpace, "喜歡")
docs <- tm_map(docs, toSpace, "像")
docs <- tm_map(docs, toSpace, "一")
docs <- tm_map(docs, toSpace, "只")
docs <- tm_map(docs, toSpace, "又")
docs <- tm_map(docs, toSpace, "N")
docs <- tm_map(docs, toSpace, "自己")
docs <- tm_map(docs, toSpace, "對")
docs <- tm_map(docs, toSpace, "多")
docs <- tm_map(docs, toSpace, "喔")
docs <- tm_map(docs, toSpace, "太")
docs <- tm_map(docs, toSpace, "樣")
docs <- tm_map(docs, toSpace, "你")
docs <- tm_map(docs, toSpace, "部")
docs <- tm_map(docs, toSpace, "大")
docs <- tm_map(docs, toSpace, "們")
docs <- tm_map(docs, toSpace, "那")
docs <- tm_map(docs, toSpace, "什麼")
docs <- tm_map(docs, toSpace, "來")
docs <- tm_map(docs, toSpace, "讓")
docs <- tm_map(docs, toSpace, "她")
docs <- tm_map(docs, toSpace, "家")
docs <- tm_map(docs, toSpace, "過")
docs <- tm_map(docs, toSpace, "啦")
docs <- tm_map(docs, toSpace, "起")
docs <- tm_map(docs, toSpace, "可以")
docs <- tm_map(docs, toSpace, "去")
docs <- tm_map(docs, toSpace, "因")
docs <- tm_map(docs, toSpace, "點")
docs <- tm_map(docs, toSpace, "後")
docs <- tm_map(docs, toSpace, "得")
docs <- tm_map(docs, toSpace, "siedust")
docs <- tm_map(docs, toSpace, "jyekid")
docs <- tm_map(docs, toSpace, "最")
docs <- tm_map(docs, toSpace, "時間")
docs <- tm_map(docs, toSpace, "重")
docs <- tm_map(docs, toSpace, "從")
docs <- tm_map(docs, toSpace, "裡")
docs <- tm_map(docs, toSpace, "提")
docs <- tm_map(docs, toSpace, "透")
docs <- tm_map(docs, toSpace, "幹")
docs <- tm_map(docs, toSpace, "波")
docs <- tm_map(docs, toSpace, "發現")
docs <- tm_map(docs, toSpace, "著")
docs <- tm_map(docs, toSpace, "早")
docs <- tm_map(docs, toSpace, "靠")
docs <- tm_map(docs, toSpace, "提")
docs <- tm_map(docs, toSpace, "自")
docs <- tm_map(docs, toSpace, "而")
docs <- tm_map(docs, toSpace, "上")
docs <- tm_map(docs, toSpace, "下")
docs <- tm_map(docs, toSpace, "才")
docs <- tm_map(docs, toSpace, "超")
docs <- tm_map(docs, toSpace, "笑")
docs <- tm_map(docs, toSpace, "演")
docs <- tm_map(docs, toSpace, "月")
docs <- tm_map(docs, toSpace, "阿")
docs <- tm_map(docs, toSpace, "面")
docs <- tm_map(docs, toSpace, "次")
docs <- tm_map(docs, toSpace, "集")
docs <- tm_map(docs, toSpace, "長")
docs <- tm_map(docs, toSpace, "當")
docs <- tm_map(docs, toSpace, "錯")
docs <- tm_map(docs, toSpace, "第")
docs <- tm_map(docs, toSpace, "原")
docs <- tm_map(docs, toSpace, "直")
docs <- tm_map(docs, toSpace, "做")
docs <- tm_map(docs, toSpace, "麼")
docs <- tm_map(docs, toSpace, "應該")
docs <- tm_map(docs, toSpace, "其實")
docs <- tm_map(docs, toSpace, "ed")
docs <- tm_map(docs, toSpace, "更")
docs <- tm_map(docs, toSpace, "再")
docs <- tm_map(docs, toSpace, "金")
docs <- tm_map(docs, toSpace, "兩")
docs <- tm_map(docs, toSpace, "年")
docs <- tm_map(docs, toSpace, "話")
docs <- tm_map(docs, toSpace, "感覺")
docs <- tm_map(docs, toSpace, "同")
docs <- tm_map(docs, toSpace, "選")
docs <- tm_map(docs, toSpace, "時")
docs <- tm_map(docs, toSpace, "蠻")
docs <- tm_map(docs, toSpace, "雙")
seg = lapply(docs, jieba_tokenizer)
seg = lapply(docs, jieba_tokenizer)
seg = lapply(docs)
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
seg = lapply(docs, jieba_tokenizer)
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg = lapply(docs, jieba_tokenizer)
m(list=ls(all.names = TRUE))
library(NLP)
library(tm)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
filenames <- list.files(getwd(), pattern="*.txt")
files <- lapply(filenames, readLines)
docs <- Corpus(VectorSource(files))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
cutter=worker()
docs <- tm_map(docs, toSpace, "U")
docs <- tm_map(docs, toSpace, "推")
docs <- tm_map(docs, toSpace, "的")
docs <- tm_map(docs, toSpace, "了")
docs <- tm_map(docs, toSpace, "是")
docs <- tm_map(docs, toSpace, "我")
docs <- tm_map(docs, toSpace, "也")
docs <- tm_map(docs, toSpace, "都")
docs <- tm_map(docs, toSpace, "不")
docs <- tm_map(docs, toSpace, "在")
docs <- tm_map(docs, toSpace, "就")
docs <- tm_map(docs, toSpace, "有")
docs <- tm_map(docs, toSpace, "XD")
docs <- tm_map(docs, toSpace, "B")
docs <- tm_map(docs, toSpace, "好")
docs <- tm_map(docs, toSpace, "很")
docs <- tm_map(docs, toSpace, "啊")
docs <- tm_map(docs, toSpace, "看")
docs <- tm_map(docs, toSpace, "E")
docs <- tm_map(docs, toSpace, "C")
docs <- tm_map(docs, toSpace, "真")
docs <- tm_map(docs, toSpace, "他")
docs <- tm_map(docs, toSpace, "F")
docs <- tm_map(docs, toSpace, "會")
docs <- tm_map(docs, toSpace, "A")
docs <- tm_map(docs, toSpace, "D")
docs <- tm_map(docs, toSpace, "沒")
docs <- tm_map(docs, toSpace, "人")
docs <- tm_map(docs, toSpace, "要")
docs <- tm_map(docs, toSpace, "還")
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, toSpace, "這")
docs <- tm_map(docs, toSpace, "嗎")
docs <- tm_map(docs, toSpace, "但")
docs <- tm_map(docs, toSpace, "吧")
docs <- tm_map(docs, toSpace, "到")
docs <- tm_map(docs, toSpace, "覺得")
docs <- tm_map(docs, toSpace, "想")
docs <- tm_map(docs, toSpace, "bh")
docs <- tm_map(docs, toSpace, "跟")
docs <- tm_map(docs, toSpace, "說")
docs <- tm_map(docs, toSpace, "和")
docs <- tm_map(docs, toSpace, "個")
docs <- tm_map(docs, toSpace, "被")
docs <- tm_map(docs, toSpace, "為")
docs <- tm_map(docs, toSpace, "喜歡")
docs <- tm_map(docs, toSpace, "像")
docs <- tm_map(docs, toSpace, "一")
docs <- tm_map(docs, toSpace, "只")
docs <- tm_map(docs, toSpace, "又")
docs <- tm_map(docs, toSpace, "N")
docs <- tm_map(docs, toSpace, "自己")
docs <- tm_map(docs, toSpace, "對")
docs <- tm_map(docs, toSpace, "多")
docs <- tm_map(docs, toSpace, "喔")
docs <- tm_map(docs, toSpace, "太")
docs <- tm_map(docs, toSpace, "樣")
docs <- tm_map(docs, toSpace, "你")
docs <- tm_map(docs, toSpace, "部")
docs <- tm_map(docs, toSpace, "大")
docs <- tm_map(docs, toSpace, "們")
docs <- tm_map(docs, toSpace, "那")
docs <- tm_map(docs, toSpace, "什麼")
docs <- tm_map(docs, toSpace, "來")
docs <- tm_map(docs, toSpace, "讓")
docs <- tm_map(docs, toSpace, "她")
docs <- tm_map(docs, toSpace, "家")
docs <- tm_map(docs, toSpace, "過")
docs <- tm_map(docs, toSpace, "啦")
docs <- tm_map(docs, toSpace, "起")
docs <- tm_map(docs, toSpace, "可以")
docs <- tm_map(docs, toSpace, "去")
docs <- tm_map(docs, toSpace, "因")
docs <- tm_map(docs, toSpace, "點")
docs <- tm_map(docs, toSpace, "後")
docs <- tm_map(docs, toSpace, "得")
new_user_word("日劇")
docs <- tm_map(docs, toSpace, "siedust")
docs <- tm_map(docs, toSpace, "jyekid")
docs <- tm_map(docs, toSpace, "最")
docs <- tm_map(docs, toSpace, "時間")
docs <- tm_map(docs, toSpace, "重")
docs <- tm_map(docs, toSpace, "從")
docs <- tm_map(docs, toSpace, "裡")
docs <- tm_map(docs, toSpace, "提")
docs <- tm_map(docs, toSpace, "透")
docs <- tm_map(docs, toSpace, "幹")
docs <- tm_map(docs, toSpace, "波")
docs <- tm_map(docs, toSpace, "發現")
docs <- tm_map(docs, toSpace, "著")
docs <- tm_map(docs, toSpace, "早")
docs <- tm_map(docs, toSpace, "靠")
docs <- tm_map(docs, toSpace, "提")
docs <- tm_map(docs, toSpace, "自")
docs <- tm_map(docs, toSpace, "而")
docs <- tm_map(docs, toSpace, "上")
docs <- tm_map(docs, toSpace, "下")
docs <- tm_map(docs, toSpace, "才")
docs <- tm_map(docs, toSpace, "超")
docs <- tm_map(docs, toSpace, "笑")
docs <- tm_map(docs, toSpace, "演")
docs <- tm_map(docs, toSpace, "月")
docs <- tm_map(docs, toSpace, "阿")
docs <- tm_map(docs, toSpace, "面")
docs <- tm_map(docs, toSpace, "次")
docs <- tm_map(docs, toSpace, "集")
docs <- tm_map(docs, toSpace, "長")
docs <- tm_map(docs, toSpace, "當")
docs <- tm_map(docs, toSpace, "錯")
docs <- tm_map(docs, toSpace, "第")
docs <- tm_map(docs, toSpace, "原")
docs <- tm_map(docs, toSpace, "直")
docs <- tm_map(docs, toSpace, "做")
docs <- tm_map(docs, toSpace, "麼")
docs <- tm_map(docs, toSpace, "應該")
docs <- tm_map(docs, toSpace, "其實")
docs <- tm_map(docs, toSpace, "ed")
docs <- tm_map(docs, toSpace, "更")
docs <- tm_map(docs, toSpace, "再")
docs <- tm_map(docs, toSpace, "金")
docs <- tm_map(docs, toSpace, "兩")
docs <- tm_map(docs, toSpace, "年")
docs <- tm_map(docs, toSpace, "話")
docs <- tm_map(docs, toSpace, "感覺")
docs <- tm_map(docs, toSpace, "同")
docs <- tm_map(docs, toSpace, "選")
docs <- tm_map(docs, toSpace, "時")
docs <- tm_map(docs, toSpace, "蠻")
docs <- tm_map(docs, toSpace, "雙")
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
filenames <- list.files(getwd(), pattern="*.txt")
files <- lapply(filenames, readLines)
docs <- Corpus(VectorSource(files))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))
})
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
cutter=worker()
new_user_word("日劇")
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
freqFrame = freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
?kable
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg <- lapply(docs, jieba_tokenizer)
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg <- lapply(docs, jieba_tokenizer)
freqFrame <- as.data.frame(table(unlist(seg)))
freqFrame <- freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
cutter <- worker()
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
colors=brewer.pal(8, "Dark2"))
ixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg <- lapply(docs, jieba_tokenizer)
freqFrame <- as.data.frame(table(unlist(seg)))
freqFrame <- freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
wordcloud(freqFrame$Var1,freqFrame$Freq,
scale=c(5,0.1),
random.order=FALSE, random.color=FALSE, min.freq  = 20, max.words = 4000,
co
kable(head(freqFrame), format = "markdown")
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg <- lapply(docs, jieba_tokenizer)
freqFrame <- as.data.frame(table(unlist(seg)))
freqFrame <- freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
mixseg <- worker()
jieba_tokenizer <-function(d){
unlist(segment(d[[1]],mixseg))
}
seg <- lapply(docs, jieba_tokenizer)
freqFrame <- as.data.frame(table(unlist(seg)))
freqFrame <- freqFrame[order(freqFrame$Freq,decreasing=TRUE), ]
library(knitr)
kable(head(freqFrame), format = "markdown")
?html_nodes
library(xml2)
library(tmcn)
library(rvest)
?html_nodes
library(Hmisc)
library(knitr)
library(ggplot2)
library(dplyr)
library(caret)
library(randomForest)
library(gridExtra)
library(ROCR)
library(corrplot)
train <- read.csv("./Data/train.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test <- read.csv("./Data/test.csv", stringsAsFactors = F, na.strings = c("NA", ""))
test$Survived <- NA
passenger <- rbind(train, test)
str(passenger)
sapply(passenger, function(x){sum(is.na(x))})
passenger$Surname <- sapply(passenger$Name, function(x){strsplit(x, split = "[,.]")[[1]][1]})
passenger$Surname <- sapply(passenger$Surname, function(x){strsplit(x, split = "[-]")[[1]][1]})
passenger$Title <- sapply(passenger$Name, function(x){strsplit(x, split = "[,.]")[[1]][2]})
passenger$Title <- sub(" ", "", passenger$Title)
passenger$Title[passenger$Title %in% c("Mlle", "Ms")] <- "Miss"
passenger$Title[passenger$Title == "Mme"] <- "Mrs"
passenger$Title[!(passenger$Title %in% c('Master', 'Miss', 'Mr', 'Mrs'))] <- "Rare Title"
passenger$Title <- as.factor(passenger$Title)
kable(table(passenger$Sex, passenger$Title))
#提供Survived間的差別
passenger$Survived <- as.factor(passenger$Survived)
ggplot(passenger[!is.na(passenger$Survived),], aes(x = Title, fill = Survived)) + geom_bar(stat = "count", position = "stack") + labs(x = "Title") + theme_grey()
passenger$Fsize <- passenger$SibSp + passenger$Parch + 1
#家庭大小和存活的關係
ggplot(passenger[!is.na(passenger$Survived),], aes(x = Fsize, fill = Survived)) + geom_bar(stat = "count", position = "dodge")
passenger$Fsizename <- paste(as.character(passenger$Fsize), passenger$Surname, sep = '')
SizeCheck <- passenger %>%
group_by(Fsizename, Fsize)%>%
#把Fsize和Fsizename相同的資料加起來成為一個數字
summarise(NumObs = n())
View(SizeCheck)
passenger$Fsizename <- paste(as.character(passenger$Fsize), passenger$Surname, sep = '')
SizeCheck <- passenger %>%
group_by(Fsizename, Fsize)%>%
#把Fsize和Fsizename相同的資料加起來成為一個數字
summarise(NumObs = n())
SizeCheck$modulo <- SizeCheck$NumObs %% SizeCheck$Fsize
#選出數據與實際不相符者
SizeCheck <- SizeCheck[SizeCheck$modulo != 0,]
sum(SizeCheck$NumObs)
View(SizeCheck)
View(passenger)
View(SizeCheck)
View(SizeCheck)
